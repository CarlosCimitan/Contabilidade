// <auto-generated />
using System;
using ContabilidadeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContabilidadeApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250612224809_addCodigo")]
    partial class addCodigo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContabilidadeApi.Models.ContaContabil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Grupo")
                        .HasColumnType("int");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MascaraNumerica")
                        .HasColumnType("bigint");

                    b.Property<string>("Natureza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("saldo")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ContasContabeis");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.HistoricoContabil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("HistoricosContabeis");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.LancamentoContabil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescComplementar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("HistoricoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("Zeramento")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("HistoricoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LancamentosContabeis");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.LancamentoDebitoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaContabilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescComplementar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LancamentoContabilId")
                        .HasColumnType("int");

                    b.Property<string>("TipoAcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContaContabilId");

                    b.HasIndex("LancamentoContabilId");

                    b.ToTable("DebitosCreditos");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.RelatorioContas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaContabilId")
                        .HasColumnType("int");

                    b.Property<string>("Relatorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContaContabilId");

                    b.ToTable("RelatoriosContas");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("TokenDataCriacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.ContaContabil", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.Empresa", "Empresa")
                        .WithMany("ContasContabeis")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.HistoricoContabil", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.LancamentoContabil", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.Empresa", "Empresa")
                        .WithMany("LancamentosContabeis")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContabilidadeApi.Models.HistoricoContabil", "Historico")
                        .WithMany()
                        .HasForeignKey("HistoricoId");

                    b.HasOne("ContabilidadeApi.Models.Usuario", "Usuario")
                        .WithMany("LancamentosContabeis")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Empresa");

                    b.Navigation("Historico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.LancamentoDebitoCredito", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.ContaContabil", "ContaContabil")
                        .WithMany("DebitosCreditos")
                        .HasForeignKey("ContaContabilId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ContabilidadeApi.Models.LancamentoContabil", "LancamentoContabil")
                        .WithMany("DebitosCreditos")
                        .HasForeignKey("LancamentoContabilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContaContabil");

                    b.Navigation("LancamentoContabil");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.RelatorioContas", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.ContaContabil", "ContaContabil")
                        .WithMany()
                        .HasForeignKey("ContaContabilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaContabil");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.Usuario", b =>
                {
                    b.HasOne("ContabilidadeApi.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.ContaContabil", b =>
                {
                    b.Navigation("DebitosCreditos");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.Empresa", b =>
                {
                    b.Navigation("ContasContabeis");

                    b.Navigation("LancamentosContabeis");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.LancamentoContabil", b =>
                {
                    b.Navigation("DebitosCreditos");
                });

            modelBuilder.Entity("ContabilidadeApi.Models.Usuario", b =>
                {
                    b.Navigation("LancamentosContabeis");
                });
#pragma warning restore 612, 618
        }
    }
}
